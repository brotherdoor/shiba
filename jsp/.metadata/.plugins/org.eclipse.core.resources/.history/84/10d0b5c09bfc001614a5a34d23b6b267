package hr.store.logic;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import hr.domain.Department;
import hr.store.DepartmentStore;
import hr.store.factory.ConnectionFactory;
import hr.store.utils.JdbcUtils;

public class DepartmentStoreLogic implements DepartmentStore{
	private ConnectionFactory factory;
	
	public DepartmentStoreLogic() {
		factory = ConnectionFactory.getInstance();
	}

	@Override
	public List<Department> retrieveAll() {
		Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
		List<Department> list = new ArrayList<>();
		try {
			conn = factory.createConnetion();
			StringBuilder sqlBuilder = new StringBuilder();
			sqlBuilder.append("select deptno, deptName ");
			sqlBuilder.append("from dept_tb ");
			sqlBuilder.append("order by deptno asc");
			stmt = conn.createStatement();
			rs = stmt.executeQuery(sqlBuilder.toString());
			while(rs.next()){
				Department dept = new Department(rs.getString("deptNo"), rs.getString("deptName"));
				list.add(dept);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally{
			JdbcUtils.close(conn, stmt, rs);
		}
		return list;
	}

	@Override
	public void create(Department department) {
		Connection conn = null;
		PreparedStatement pstmt = null;
		try {
			conn = factory.createConnetion();
			pstmt = conn.prepareStatement(
					"insert into dept_tb (deptNo, deptName) values(?,?)");
			pstmt.setString(1, department.getNo());
			pstmt.setString(2, department.getName());
			pstmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		} finally{
			JdbcUtils.close(conn, pstmt);
		}
	}

	@Override
	public Department retrieve(String deptNo) {
		return null;
	}

	@Override
	public void delete(String deptNo) {
		
	}

}
