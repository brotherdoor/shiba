package store.logic;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import domain.BaseballTeam;
import store.BaseballTeamStore;
import store.utils.ConnectionFactory;

public class BaseballTeanStore implements BaseballTeamStore{
	ConnectionFactory factory;
	
	public BaseballTeanStore() {
		factory = ConnectionFactory.getInstance();
	}

	@Override
	public BaseballTeam retrieve(String teamId) {
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		BaseballTeam team = null;
		try {
			conn = factory.createConnetion();
			pstmt = conn.prepareStatement(
					"select id, name, region, manager, stadium, logo from team_tb where id = ?");
			pstmt.setString(1, teamId);
			rs = pstmt.executeQuery();
			if(rs.next()){
				team = new BaseballTeam();
				team.setTeamId(rs.getString("id"));		// µÇ³Ä?
				team.setName(rs.getString("name"));
				team.setRegion(rs.getString("region"));
				team.setRegion(rs.getString("manager"));
				team.setStadium(rs.getString("stadium"));
				team.setLogo(rs.getString("logo"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		return null;
	}

	@Override
	public List<BaseballTeam> retrieveAll() {
		return null;
	}

}
